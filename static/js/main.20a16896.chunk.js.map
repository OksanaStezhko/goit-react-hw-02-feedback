{"version":3,"sources":["components/Container/Container.module.css","components/Sections/Sections.module.css","components/Container/Container.jsx","components/Sections/Sections.jsx","components/FeedbackOptionsItem/FeedbackOptionsItem.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","style","container","Sections","title","section","FeedbackOptionsItem","this","props","buttonName","onClickButton","type","onClick","Component","FeedbackOptions","options","map","option","StatisticsItem","itemName","itemValue","Statistics","itemList","key","value","Notification","message","App","state","good","neutral","bad","handleButton","setState","prevState","Object","values","reduce","acc","Math","round","countTotalFeedback","buttonNames","keys","stateList","entries","statisticsList","total","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,4B,0KCMbC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,K,iBCWrBI,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OACf,0BAASC,UAAWC,IAAMI,QAA1B,UACE,6BAAKD,IACJL,MCeUO,E,4JAlBb,WAAU,IAAD,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,WAAYC,EADb,EACaA,cAEpB,OACE,6BACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,SACGD,U,GAPuBI,aC2BnBC,E,4JAzBb,WAAU,IAAD,EAC4BP,KAAKC,MAAhCO,EADD,EACCA,QAASL,EADV,EACUA,cACjB,OACE,6BACGK,EAAQC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEER,WAAYQ,EACZP,cAAe,WACbA,EAAcO,KAHXA,Y,GAPaJ,a,QCgBfK,E,4JAhBb,WAAU,IAAD,EACyBX,KAAKC,MAA7BW,EADD,EACCA,SAAUC,EADX,EACWA,UAClB,OACE,+BACE,iCAAOD,EAAP,OACA,+BAAOC,W,GANcP,aCkBdQ,E,4JAhBb,WAAU,IACAC,EAAaf,KAAKC,MAAlBc,SACR,OACE,6BACGA,EAASN,KAAI,mCAAEO,EAAF,KAAOC,EAAP,YACZ,cAAC,EAAD,CAA0BL,SAAUI,EAAKH,UAAWI,GAA/BD,Y,GANNV,aCUVY,E,4JAVb,WAAU,IACAC,EAAYnB,KAAKC,MAAjBkB,QACR,OAAO,8BAAMA,Q,GAHUb,aCmDZc,E,4MA9CbC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCC,aAAe,SAAAvB,GACb,EAAKwB,UAAS,SAAAC,GACZ,OAAO,eAAGzB,EAAayB,EAAUzB,GAAc,O,wDAInD,WACE,OAAO0B,OAAOC,OAAO7B,KAAKqB,OAAOS,QAAO,SAACC,EAAKd,GAAN,OAAgBc,EAAMd,IAAO,K,6CAGvE,WACE,OAAOe,KAAKC,MAAOjC,KAAKqB,MAAMC,KAAOtB,KAAKkC,qBAAwB,O,oBAGpE,WACE,IAAMC,EAAcP,OAAOQ,KAAKpC,KAAKqB,OAC/BgB,EAAYT,OAAOU,QAAQtC,KAAKqB,OAEhCkB,EAAiBX,OAAOU,QAAPV,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAClB5B,KAAKqB,OADa,IAErBmB,MAAOxC,KAAKkC,mBAAmBG,GAC/B,oBAAqBrC,KAAKyC,mCAAqC,KAGjE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAU5C,MAAM,wBAAhB,SACE,cAAC,EAAD,CACEW,QAAS2B,EACThC,cAAeH,KAAKyB,iBAGxB,cAAC,EAAD,CAAU5B,MAAM,aAAhB,SACGG,KAAKkC,qBACJ,cAAC,EAAD,CAAYnB,SAAUwB,IAEtB,cAAC,EAAD,CAAcpB,QAAQ,+B,GAvChBb,aCFlBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.20a16896.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1q9gQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__bEhbB\"};","import React from 'react';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={style.container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Sections.module.css';\n\nconst Sections = ({ title, children }) => (\n  <section className={style.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSections.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Sections;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptionsItem extends Component {\n  render() {\n    const { buttonName, onClickButton } = this.props;\n\n    return (\n      <li>\n        <button type=\"button\" onClick={onClickButton}>\n          {buttonName}\n        </button>\n      </li>\n    );\n  }\n}\n\nFeedbackOptionsItem.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  onClickButton: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptionsItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptionsItem from '../FeedbackOptionsItem';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onClickButton } = this.props;\n    return (\n      <ul>\n        {options.map(option => (\n          <FeedbackOptionsItem\n            key={option}\n            buttonName={option}\n            onClickButton={() => {\n              onClickButton(option);\n            }}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  option: PropTypes.arrayOf(\n    PropTypes.shape({ option: PropTypes.string.isRequired }),\n  ),\n  onClickButton: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StatisticsItem extends Component {\n  render() {\n    const { itemName, itemValue } = this.props;\n    return (\n      <li>\n        <span>{itemName}:</span>\n        <span>{itemValue}</span>\n      </li>\n    );\n  }\n}\n\nStatisticsItem.propTypes = {\n  itemName: PropTypes.string.isRequired,\n  itemValue: PropTypes.number.isRequired,\n};\n\nexport default StatisticsItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StatisticsItem from '../StatisticsItem';\n\nclass Statistics extends Component {\n  render() {\n    const { itemList } = this.props;\n    return (\n      <ul>\n        {itemList.map(([key, value]) => (\n          <StatisticsItem key={key} itemName={key} itemValue={value} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  itemList: PropTypes.array.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n    return <div>{message}</div>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Sections from './components/Sections';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleButton = buttonName => {\n    this.setState(prevState => {\n      return { [buttonName]: prevState[buttonName] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    const buttonNames = Object.keys(this.state);\n    const stateList = Object.entries(this.state);\n\n    const statisticsList = Object.entries({\n      ...this.state,\n      total: this.countTotalFeedback(stateList),\n      'positive feedback': this.countPositiveFeedbackPercentage() || 0,\n    });\n\n    return (\n      <Container>\n        <Sections title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttonNames}\n            onClickButton={this.handleButton}\n          />\n        </Sections>\n        <Sections title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics itemList={statisticsList} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Sections>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}