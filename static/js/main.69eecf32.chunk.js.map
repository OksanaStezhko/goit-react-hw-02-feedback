{"version":3,"sources":["components/FeedbackOptionsItem/FeedbackOptionsItem.module.css","components/Container/Container.module.css","components/Sections/Sections.module.css","components/StatisticsItem/StatisticsItem.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Sections/Sections.jsx","components/FeedbackOptionsItem/FeedbackOptionsItem.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","style","container","Sections","title","section","FeedbackOptionsItem","this","props","buttonName","onClickButton","item","type","button","onClick","Component","FeedbackOptions","options","map","option","StatisticsItem","itemName","itemValue","Statistics","itemList","key","value","Notification","message","App","state","good","neutral","bad","handleButton","setState","prevState","Object","values","reduce","acc","Math","round","countTotalFeedback","buttonNames","keys","stateList","entries","statisticsList","total","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,KAAO,kCAAkC,OAAS,sC,iBCApED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,+B,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,2KCMVC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,K,iBCWrBI,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,SAAV,OACf,0BAASC,UAAWC,IAAMI,QAA1B,UACE,6BAAKD,IACJL,M,gBCgBUO,E,4JAlBb,WAAU,IAAD,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,WAAYC,EADb,EACaA,cAEpB,OACE,oBAAIV,UAAWC,IAAMU,KAArB,SACE,wBAAQC,KAAK,SAASZ,UAAWC,IAAMY,OAAQC,QAASJ,EAAxD,SACGD,U,GAPuBM,aC0BnBC,E,4JAzBb,WAAU,IAAD,EAC4BT,KAAKC,MAAhCS,EADD,EACCA,QAASP,EADV,EACUA,cACjB,OACE,6BACGO,EAAQC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEEV,WAAYU,EACZT,cAAe,WACbA,EAAcS,KAHXA,Y,GAPaJ,a,yBCoBfK,E,4JAnBb,WAAU,IAAD,EACyBb,KAAKC,MAA7Ba,EADD,EACCA,SAAUC,EADX,EACWA,UAClB,OACE,qBAAItB,UAAWC,IAAMU,KAArB,UACE,iCAAOU,EAAP,OACA,iCACGC,EACa,sBAAbD,EAAmC,IAAM,a,GARvBN,aCiBdQ,E,4JAhBb,WAAU,IACAC,EAAajB,KAAKC,MAAlBgB,SACR,OACE,6BACGA,EAASN,KAAI,mCAAEO,EAAF,KAAOC,EAAP,YACZ,cAAC,EAAD,CAA0BL,SAAUI,EAAKH,UAAWI,GAA/BD,Y,GANNV,a,iBCWVY,E,4JAVb,WAAU,IACAC,EAAYrB,KAAKC,MAAjBoB,QACR,OAAO,qBAAK5B,UAAWC,IAAMU,KAAtB,SAA6BiB,Q,GAHbb,aCkDZc,E,4MA9CbC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCC,aAAe,SAAAzB,GACb,EAAK0B,UAAS,SAAAC,GACZ,OAAO,eAAG3B,EAAa2B,EAAU3B,GAAc,O,wDAInD,WACE,OAAO4B,OAAOC,OAAO/B,KAAKuB,OAAOS,QAAO,SAACC,EAAKd,GAAN,OAAgBc,EAAMd,IAAO,K,6CAGvE,WACE,OAAOe,KAAKC,MAAOnC,KAAKuB,MAAMC,KAAOxB,KAAKoC,qBAAwB,O,oBAGpE,WACE,IAAMC,EAAcP,OAAOQ,KAAKtC,KAAKuB,OAC/BgB,EAAYT,OAAOU,QAAQxC,KAAKuB,OAEhCkB,EAAiBX,OAAOU,QAAPV,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAClB9B,KAAKuB,OADa,IAErBmB,MAAO1C,KAAKoC,mBAAmBG,GAC/B,oBAAqBvC,KAAK2C,mCAAqC,KAGjE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAU9C,MAAM,yBAAhB,SACE,cAAC,EAAD,CACEa,QAAS2B,EACTlC,cAAeH,KAAK2B,iBAGxB,cAAC,EAAD,CAAU9B,MAAM,cAAhB,SACGG,KAAKoC,qBACJ,cAAC,EAAD,CAAYnB,SAAUwB,IAEtB,cAAC,EAAD,CAAcpB,QAAQ,+B,GAvChBb,aCFlBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69eecf32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptionsItem_item__IIiD-\",\"button\":\"FeedbackOptionsItem_button__TYjeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1q9gQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__bEhbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsItem_item__3zO1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Notification_item__covqG\"};","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Sections.module.css';\r\n\r\nconst Sections = ({ title, children }) => (\r\n  <section className={style.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Sections;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptionsItem.module.css';\n\nclass FeedbackOptionsItem extends Component {\n  render() {\n    const { buttonName, onClickButton } = this.props;\n\n    return (\n      <li className={style.item}>\n        <button type=\"button\" className={style.button} onClick={onClickButton}>\n          {buttonName}\n        </button>\n      </li>\n    );\n  }\n}\n\nFeedbackOptionsItem.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  onClickButton: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptionsItem;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackOptionsItem from '../FeedbackOptionsItem';\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const { options, onClickButton } = this.props;\r\n    return (\r\n      <ul>\r\n        {options.map(option => (\r\n          <FeedbackOptionsItem\r\n            key={option}\r\n            buttonName={option}\r\n            onClickButton={() => {\r\n              onClickButton(option);\r\n            }}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.arrayOf(\r\n    PropTypes.shape({ option: PropTypes.string.isRequired }),\r\n  ),\r\n  onClickButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './StatisticsItem.module.css';\n\nclass StatisticsItem extends Component {\n  render() {\n    const { itemName, itemValue } = this.props;\n    return (\n      <li className={style.item}>\n        <span>{itemName}:</span>\n        <span>\n          {itemValue}\n          {itemName === 'positive feedback' ? '%' : ''}\n        </span>\n      </li>\n    );\n  }\n}\n\nStatisticsItem.propTypes = {\n  itemName: PropTypes.string.isRequired,\n  itemValue: PropTypes.number.isRequired,\n};\n\nexport default StatisticsItem;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticsItem from '../StatisticsItem';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { itemList } = this.props;\r\n    return (\r\n      <ul>\r\n        {itemList.map(([key, value]) => (\r\n          <StatisticsItem key={key} itemName={key} itemValue={value} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  itemList: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nclass Notification extends Component {\n  render() {\n    const { message } = this.props;\n    return <div className={style.item}>{message}</div>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Sections from './components/Sections';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleButton = buttonName => {\n    this.setState(prevState => {\n      return { [buttonName]: prevState[buttonName] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    const buttonNames = Object.keys(this.state);\n    const stateList = Object.entries(this.state);\n\n    const statisticsList = Object.entries({\n      ...this.state,\n      total: this.countTotalFeedback(stateList),\n      'positive feedback': this.countPositiveFeedbackPercentage() || 0,\n    });\n\n    return (\n      <Container>\n        <Sections title=\"Please leave feedback:\">\n          <FeedbackOptions\n            options={buttonNames}\n            onClickButton={this.handleButton}\n          />\n        </Sections>\n        <Sections title=\"Statistics:\">\n          {this.countTotalFeedback() ? (\n            <Statistics itemList={statisticsList} />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Sections>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}